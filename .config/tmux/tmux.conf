#  Tmux configuration
#####################

set -g mouse on # Enable mouse
set -g set-clipboard on # Interact with xterm clipboard
set -sg escape-time 0 # fix the escape delay problem when using vim
set -g repeat-time 0
# highlight window when it has new activity
set -wg monitor-activity on
set -wg monitor-bell on
set -g visual-activity on
 # start session and window index at 1
set -g base-index 1
set -wg pane-base-index 1
# re-number and re-name windows dynamically
set -wg automatic-rename on
set -g renumber-windows on # re-number windows when one is closed
set -g history-limit 5000 # increase history size
set -g focus-events on # pass focus events to applications running.
set -g set-titles on # Automatically set window title

# Enables italics, bold, etc
# $ tmux info | grep -e RGB -e Tc
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -sa terminal-overrides ",*256col*:RGB"
# set-option -sa terminal-overrides ',XXX:RGB'
# set-option -ga terminal-overrides ',XXX:Tc'

###########################
#  Key Bindings
###########################

# remap prefix
set -g prefix C-space
unbind C-b
bind-key C-space send-prefix
 # Use vim keybindings in copy mode
setw -g mode-keys vi
# Use emacs keybindings in the status bar
set -g status-keys emacs
# vim copy selection
unbind-key [
bind-key ESCAPE copy-mode
set-option -s set-clipboard off
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter

if-shell "uname | grep -q Darwin" {
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'pbcopy'
  bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'pbcopy'
} {
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -se c -i'
  bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'xclip -se c -i'
}

# Search
bind-key / copy-mode \; send-key ?
# Reload tmux config
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"
bind-key C-space last-window # last active window
bind C new-session # Create new session
bind c new-window -c '#{pane_current_path}'  # open window in current path
# splits
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Resize panes using hjkl
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r H resize-pane -L 20
bind -r L resize-pane -R 20

### Theme
background="#282C34"
# pane border styling
set -g pane-active-border-style "fg=colour02"
set -g pane-border-style "fg=${background}"
# message styling
set -g message-style "bg=colour02,fg=${background}"
# status bar
set -g status-justify left
set -g status-position bottom
set -g status-style "bg=${background}"
set -g status-left ""
set -g window-status-format '#[fg=white] #I #W '
set -g window-status-current-format "#[fg=${background},bg=colour02,bold] #I #W "
set -g status-right "#[fg=white] %l:%M %p #[fg=${background},bg=green, bold] ðŸ’» #S #{prefix_highlight}"

##########################
# Plugins
##########################

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_prefix_prompt 'ðŸš€'
set -g @prefix_highlight_copy_prompt 'ðŸ“‹'
set -g @prefix_highlight_bg 'blue'

run '~/.config/tmux/plugins/tpm/tpm'
