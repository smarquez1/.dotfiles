#  Tmux configuration
#####################
# start window index at 1
set -g base-index 1
# start session index at 1
setw -g pane-base-index 1
# re-number windows when one is closed
set -g renumber-windows on
# Enable mouse
set -g mouse on
# Interact with xterm clipboard
set -g set-clipboard on
# fix the escape delay problem when using vim
set -sg escape-time 0
# Monitor activity"
setw -g monitor-activity on
# Enable visual bell
set -g visual-activity on
set-window-option -g visual-bell off
# Automatically set window title
set-option -g set-titles on
set-window-option -g automatic-rename on
# By default "default-terminal" is screen
# Using "tmux-256color" enables features like italic
# set-option -g default-terminal "screen-256color"
set -g default-terminal    "tmux-256color"
# Tell tmux that "xterm-256color" (the terminal emulator outside tmux) supports true color
set -ga terminal-overrides ",xterm-256color:Tc"
# Fix neovim cursor shape
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
# if run as "tmux attach", create a session if one does not already exist
# new-session -n $HOST

###########################
#  Key Bindings
###########################

# Set tmux to Vi mode
setw -g mode-keys vi
set -g status-keys vi
set -g @shell_mode 'vi'

# vim copy selection
unbind-key [
bind-key ESCAPE copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection

# remap prefix
unbind C-b
set-option -g prefix C-space
bind-key C-space send-prefix

unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Create new session
bind C new-session

# last active window
bind-key C-space last-window

#open window with currrent path                                                                   
bind c new-window -c '#{pane_current_path}' 
# splits
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

###########################
# Appearance
###########################

# status
onedark_visual_grey="#3e4452"
set -g status-bg $onedark_visual_grey
set -g status-left "#{prefix_highlight}#[fg=green]"
set -g window-status-format '#[bg=#3e4452]#[fg=white] #I #W '
set -g window-status-current-format '#[bg=green]#[fg=black,bold] #I #W '
set -g status-right "#[fg=black,bg=green,bold] ðŸ’» #S "
set -g status-justify left
set-option -g status-position bottom

##########################
# Plugins
##########################

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_prefix_prompt 'ðŸš€'
set -g @prefix_highlight_copy_prompt 'ðŸ“‹'
set -g @prefix_highlight_bg 'green'
set -g @prefix_highlight_copy_mode_attr 'bg=green'

run '~/.tmux/plugins/tpm/tpm'
